!obj:pylearn2.train.Train {
  dataset: &train !obj:pylearn2.datasets.mri_maxout.MRI {
      which_set: 'train',
      start: 0,
      stop: 300,
    },
    model: !obj:pylearn2.models.mlp.MLP {
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [61, 61],
            num_channels: 40,
        },
    layers: [
             !obj:pylearn2.models.maxout.MaxoutConvC01B {
               layer_name: 'h2',
               pad: 4,
               tied_b: 1,
               W_lr_scale: 0.05,
               b_lr_scale: 0.05,
               num_channels: 40,
               num_pieces: 2,
               kernel_shape: [5, 5],
               pool_shape: [4, 4],
               pool_stride: [2, 2],
               irange: 0.005,
               max_kernel_norm: 0.9,
             },
             !obj:pylearn2.models.maxout.MaxoutConvC01B {
             layer_name: 'h3',
             pad: 3,
             tied_b: 1,
             W_lr_scale: 0.05,
             b_lr_scale: 0.05,
             num_channels: 40,
             num_pieces: 2,
             kernel_shape: [5, 5],
             pool_shape: [4, 4],
             pool_stride: [2, 2],
             irange: 0.005,
             max_kernel_norm: 1.9365,
             },
             !obj:pylearn2.models.mlp.Softmax {
               max_col_norm: 1.9365,
               layer_name: 'y',
               n_classes: 3,
               irange: 0.005
             }
            ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 1,
        learning_rate: 0.1,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: 0.5,
        },
        monitoring_dataset:
        {
            'valid': !obj:pylearn2.datasets.mri_maxout.MRI {
              which_set: 'train',
              start: 300,
              stop: 346,
            },
            'test': !obj:pylearn2.datasets.mri_maxout.MRI {
              which_set: 'train',
              start: 346,
              stop: 396,
            },
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 50
        },
    },
    extensions:
        [!obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
            channel_name: 'valid_y_misclass',
            save_path: "./cnn_brain_raw_maxout.pkl"
        }, !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: 0.6,
        }, !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
            start: 1,
            saturate: 250,
            decay_factor: 0.01
           }
    ],
}
